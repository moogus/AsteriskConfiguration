<script type="text/javascript">
     var createTrunkInformationPicker = function(config) {

         var publicMembers = picker({ title: "Apply Connection Details", width: '450' });

         var baseshow = publicMembers.show;

         var heldList;
         var trunkIsGood = false;

         publicMembers.show = function(value) {
             trunkIsGood = false;
             heldList = value;
             baseshow();
             publicMembers.setCurrentValues(value);
         };

         publicMembers.hideBri = false;
         publicMembers.tabTitle = 'Sip Trunk';

         publicMembers.showAddTabs = function(basediv) {

             var briPicker = addStaticTab('BRI Trunk');


             briPicker.html = "<table class='dataTable'><thead></thead><tbody><tr class='odd'><td><input name=\"day\" type=\"checkbox\" id=\"channel1\" value=\"1\" /></td>" +
                 "<td><b>channel 1</b></td></tr><tr class='even'><td><input name=\"day\" type=\"checkbox\" id=\"channel2\" value=\"2\" /></td><td><b>channel 2</b></td>" +
                 "</tr><tr class='odd'><td><input name=\"day\" type=\"checkbox\" id=\"channel4\" value=\"4\" /></td><td><b>channel 4</b></td></tr><tr class='even'>" +
                 "<td><input name=\"day\" type=\"checkbox\" id=\"channel5\" value=\"5\" /></td><td><b>channel 5</b></td></tr><tr class='odd'><td><input name=\"day\" type=\"checkbox\" id=\"channel7\" value=\"7\" />" +
                 "</td><td><b>channel 7</b></td></tr><tr class='even'><td><input name=\"day\" type=\"checkbox\" id=\"channel8\" value=\"8\" /></td><td><b>channel 8</b></td>" +
                 "</tr><tr class='odd'><td><input name=\"day\" type=\"checkbox\" id=\"channel10\" value=\"10\" /></td><td><b>channel 10</b></td></tr><tr class='even'><td>" +
                 "<input name=\"day\" type=\"checkbox\" id=\"channel11\" value=\"11\" /></td><td><b>channel 11</b></td></tr></tbody></table><div style=\"padding-top: 5px;margin-bottom:5px; width: 250px; clear: both\">" +
                 "<label id=\"messageUser1\" style=\"color: red;font-weight: bold; margin-top:4px\"></label></div>" + briPicker.html;

             briPicker.click = function(picker) {
                 privateMembers.performClick(picker);
             };

             var sipPicker = addStaticTab(publicMembers.tabTitle);

             sipPicker.html = "<div style=\"width:250px;clear: both\"> <label style=\"float:left \">User Name</label> <input  type=\"text\" id=\"userName\" style=\"float:right; " +
                 "\" value=\"\" /> </div> <div style=\"clear:both;height:2px\"> <br /> </div> <div style=\"width:250px;clear: both\"> <label style=\"float:left " +
                 "\">Password</label> <input type=\"text\" id=\"password\" style=\"float:right \" value=\"\" /> </div> <div style=\"clear:both;height:2px\"> <br />" +
                 " </div> <div style=\"width:250px;clear: both\"> <label style=\"float:left\">Host</label> <input type=\"text\" id=\"host\" style=\"float:right \" " +
                 " value=\"\" /> </div> <div style=\"clear:both;height:2px\"> <br /> </div> <div style=\"width:250px;clear: both\"> <label style=\"float:left " +
                 " \">Channels</label> <input type=\"text\" id=\"channels\" style=\"float:right \" value=\"\" />"
                 + "<div style=\"clear:both;height:2px\"> <br /> </div> "
                 + "<div style=\"width:250px;clear: both\"> <label style=\"float:left \">CLI Type</label> <select style=\"float:right; width:154px \" id=\"presType\">"
                 + "<option value=\"None\">None</option>" + "<option value=\"StartWith\">StartWith</option><option value=\"EndWith\">EndWith</option><option value=\"RegExp\">RegExp</option>"
                 + "</select></div>"
                 + "<div style=\"clear:both;height:2px\"> <br /> </div> "
                 + "<div style=\"width:250px;clear: both\"> <label style=\"float:left \">CLI Value</label> <input type=\"text\" id=\"presValue\" style=\"float:right \" value=\"\" /> "
        
                 //TODO: get this to actualy do something repicate into the trunks controller
                 + "<div style=\"clear:both;height:2px\"> <br /> </div> "
                 + "<label style=\"float:left \">CLI Type</label> <select style=\"float:right; width:154px \" id=\"presType2\">"
                 + "<option value=\"None\">None</option>" + "<option value=\"StartWith\">StartWith</option><option value=\"EndWith\">EndWith</option><option value=\"RegExp\">RegExp</option>"
                 + "</select></div>"
                 + "<div style=\"clear:both;height:2px\"> <br /> </div> "
                 + "<div style=\"width:250px;clear: both\"> <label style=\"float:left \">CLI Value</label> <input type=\"text\" id=\"presValue2\" style=\"float:right \" value=\"\" /> "

                 //TODO: get this to actualy do something repicate into the trunks controller
                 + "</div> </div> <div style=\"padding-top: 5px;margin-bottom:5px; width: 250px; clear: both\"><label id=\"messageUser2\" style=\"color: red;font-weight: bold; margin-top:4px\"></label></div>"
                 + sipPicker.html;

             sipPicker.click = function(picker) {
                 privateMembers.performClick(picker);
             };


             //TODO this needs to be set so if the value has not been entered the button is greyed out
             var baseAddTab1 = sipPicker.addTabForThisTable;
             sipPicker.addTabForThisTable = function(parent) {
                 baseAddTab1(parent);
                 sipPicker.currentTab.find('input.button').removeAttr('disabled');
             };

             publicMembers.addTab(sipPicker);

             //TODO this needs to be set so if the value has not been entered the button is greyed out

             if (publicMembers.hideBri === false) {
                 var baseAddTab2 = briPicker.addTabForThisTable;
                 briPicker.addTabForThisTable = function(parent) {
                     baseAddTab2(parent);
                     briPicker.currentTab.find('input.button').removeAttr('disabled');
                 };
                 publicMembers.addTab(briPicker);
             }

             publicMembers.setCurrentValues = function(value) {
                 privateMembers.setpickerValuesFromRow(value);
             };


         };

         var privateMembers = {
             setpickerValuesFromRow: function(value) {
                 if (privateMembers.isInList(value, ",", 'Bri') === 1) {
                     privateMembers.changeTab('BRI Trunk');
                     privateMembers.setBriChannels(value);
                 } else if (privateMembers.isInList(value, ",", 'Sip') === 1) {
                     privateMembers.changeTab('Sip Trunk');
                     privateMembers.setSipCredentials(value);
                 }
             },

             performClick: function(picker) {
                 var numberOfCredentials = privateMembers.hasSipCredentials();
                 var hasBriChannels = privateMembers.hasBriChannels();

                 if (numberOfCredentials > 0 || hasBriChannels) {
                     if (numberOfCredentials === 4) {
                         if (trunkIsGood) {
                             privateMembers.setTrunkValues(picker);
                         } else
                             privateMembers.checkValuesWithNew();
                     } else {
                         if (numberOfCredentials === 4) {
                             picker.setValueInDataTable(privateMembers.setSipCredentialsAsValue());
                         } else if (hasBriChannels && numberOfCredentials == -0) {
                             picker.setValueInDataTable(privateMembers.setBriChannelsAsValue());
                         }
                     }
                 }
             },

             setTrunkValues: function(picker) {
                 if (privateMembers.isInList(heldList, ",", 'Bri') === 1) {
                     picker.setValueInDataTable(privateMembers.setBriChannelsAsValue());
                 } else {
                     picker.setValueInDataTable(privateMembers.setSipCredentialsAsValue());
                 }
             },

             setBriChannels: function(value) {
                 privateMembers.setCheckBox(value, '#channel1', '1');
                 privateMembers.setCheckBox(value, '#channel2', '2');
                 privateMembers.setCheckBox(value, '#channel4', '4');
                 privateMembers.setCheckBox(value, '#channel5', '5');
                 privateMembers.setCheckBox(value, '#channel7', '7');
                 privateMembers.setCheckBox(value, '#channel8', '8');
                 privateMembers.setCheckBox(value, '#channel10', '10');
                 privateMembers.setCheckBox(value, '#channel11', '11');
             },

             setSipCredentials: function(separatedList) {
                 var list = separatedList.split(',');
                 $('#userName').val(list[1]);
                 $('#password').val(list[2]);
                 $('#host').val(list[3]);
                 $('#channels').val(list[4]);
                 privateMembers.presTypeSelected(list[5]);
                 $('#presValue').val(list[6]);
             },

             presTypeSelected: function(value) {
                 switch (value) {
                 case 'StartWith':
                     $('#presType').val('StartWith');
                     break;
                 case 'EndWith':
                     $('#presType').val('EndWith');
                     break;
                 case 'RegExp':
                     $('#presType').val('RegExp');
                     break;
                 case 'None':
                     $('#presType').val('None');
                     break;
                 }
             },

             checkValuesWithNew: function() {
                 $('#messageUser1').text('You are about to overwrite the current trunk settings do you want to proceed?');
                 $('#messageUser2').text('You are about to overwrite the current trunk settings do you want to proceed?');
                 $("input[value='Set Picker Value']").val('Overwrite Trunk Values');
                 trunkIsGood = true;
             },

             setBriChannelsAsValue: function() {
                 var rtn = "";
                 rtn = this.buildCommaSeparatedList(rtn, 'channel1');
                 rtn = this.buildCommaSeparatedList(rtn, 'channel2');
                 rtn = this.buildCommaSeparatedList(rtn, 'channel4');
                 rtn = this.buildCommaSeparatedList(rtn, 'channel5');
                 rtn = this.buildCommaSeparatedList(rtn, 'channel7');
                 rtn = this.buildCommaSeparatedList(rtn, 'channel8');
                 rtn = this.buildCommaSeparatedList(rtn, 'channel10');
                 rtn = this.buildCommaSeparatedList(rtn, 'channel11');
                 trunkIsGood = false;
                 return rtn;
             },

             changeTab: function(tabText) {
                 var iId = $(".ui-tabs-nav li a:contains('" + tabText + "')")
                     .parent().index();
                 $('#tabs').tabs('select', iId);
             },

             setSipCredentialsAsValue: function() {
                 trunkIsGood = false;

                 if ($('#presValue').val() !== undefined && $('#presValue').val().length > 0) {
                     return 'Sip,' + $('#userName').val() + ',' + $('#password').val() + ',' + $('#host').val() + ',' + $('#channels').val() + ',' + $('#presType').val() + ',' + $('#presValue').val() + ',' + $('#presType2').val() + ',' + $('#presValue2').val();
                 } else {
                     return 'Sip,' + $('#userName').val() + ',' + $('#password').val() + ',' + $('#host').val() + ',' + $('#channels').val() + ',' + $('#presType').val() + ',null' + ',' + $('#presType2').val() + ',null';
                 }
             },

             hasSipCredentials: function() {
                 var rtn1 = privateMembers.hasValue($('#userName'));
                 var rtn2 = privateMembers.hasValue($('#password'));
                 var rtn3 = privateMembers.hasValue($('#host'));
                 var rtn4 = 0;
                 if (privateMembers.hasValue($('#channels')) === 1) {
                     rtn4 = privateMembers.validateNumber($('#channels'));
                 }

                 return rtn1 + rtn2 + rtn3 + rtn4;
             },

             hasValue: function(value) {
                 if (value.val() !== undefined && value.val().length > 0) {
                     return 1;
                 } else {
                     $(value).addClass('hasError');
                     $('#messageUser1').text('Please ensure all values have been entered correctly.');
                     return 0;
                 }
             },

             validateNumber: function(input) {
                 var regex = '^(\\d+(,\\d+)*)?$';
                 var valueToCheck = $(input).val();
                 if (valueToCheck.match(regex)) {
                     $(input).removeClass('hasError');
                     return 1;
                 } else {
                     $(input).addClass('hasError');
                     $('#messageUser1').text('Channels need to be a whole number.');
                     return 0;
                 }
             },

             hasBriChannels: function() {
                 var hasBri = 0;
                 if (privateMembers.isValueChecked('channel1')) {
                     hasBri++;
                 }
                 if (privateMembers.isValueChecked('channel2')) {
                     hasBri++;
                 }
                 if (privateMembers.isValueChecked('channel4')) {
                     hasBri++;
                 }
                 if (privateMembers.isValueChecked('channel5')) {
                     hasBri++;
                 }
                 if (privateMembers.isValueChecked('channel7')) {
                     hasBri++;
                 }
                 if (privateMembers.isValueChecked('channel8')) {
                     hasBri++;
                 }
                 if (privateMembers.isValueChecked('channel10')) {
                     hasBri++;
                 }
                 if (privateMembers.isValueChecked('channel11')) {
                     hasBri++;
                 }
                 return hasBri > 0;
             },

             buildCommaSeparatedList: function(commaSeparatedList, id) {
                 var csl = "";
                 if (privateMembers.isValueChecked(id)) {
                     if (commaSeparatedList === "") {
                         csl = 'Bri,' + $('#' + id).val();
                     } else {
                         csl = commaSeparatedList + "," + $('#' + id).val();
                     }
                 } else
                     csl = commaSeparatedList;

                 return csl;
             },

             isValueChecked: function(id) {
                 return $('#' + id).is(":checked") ? true : false;
             },

             //set the checkboxs on the day form based on the current held values
             setCheckBox: function(commaSeparatedList, checkbox, value) {
                 if (privateMembers.isInList(commaSeparatedList, ",", value) === 1) {
                     $(checkbox).attr('checked', true);
                 } else {
                     $(checkbox).attr('checked', false);
                 }
             },

             isInList: function(separatedList, listDelimiter, valueToFind) {
                 var list = separatedList.split(listDelimiter);
                 var rtn = 0;
                 for (var d in list) {
                     if (list[d] === valueToFind) {
                         rtn = 1;
                     }
                 }
                 return rtn;
             }
         };

         publicMembers.linkText = "Trunk Value Picker";
         return publicMembers;

     };
 </script>